'use strict';

import { HomeCarouselModel } from '@/shared/prisma.model.shared';
import sharedResponseTypes from '@/shared/shared.response.types';

import asyncHandler from '@/util/asyncHandler';
import homeCarouselSelectionCriteria from '@/app/api/v1/home/carousel/home.carousel.selection.criteria';

/**
 * Represents the criteria used for selecting items in the home carousel component.
 *
 * The `selectionCriteria` variable is generated by the `homeCarouselSelectionCriteria` function,
 * and it defines the parameters or rules that determine which items are displayed in the carousel.
 *
 * Usage of this variable ensures that the home carousel content is dynamically selected based
 * on predefined business logic.
 */
const selectionCriteria = homeCarouselSelectionCriteria();

const { NOT_FOUND, OK } = sharedResponseTypes;

/**
 * Asynchronous function to handle the retrieval of the gallery photo list.
 *
 * This function fetches the existing carousel entry from the model using predefined selection criteria.
 * If no carousel entry is found, it returns a NOT_FOUND response with an appropriate message.
 * If the data is successfully retrieved, it returns an OK response with a success message,
 * the list of images, and the request metadata.
 *
 * @param {Object} request - The incoming request object containing metadata or parameters associated with the operation.
 * @returns {Promise<Object>} - A promise resolving to the response object indicating the result of the operation.
 *                              The response includes either a NOT_FOUND or OK status with associated data.
 */
const handleGetGalleryPhotoList = async (request) => {
    // Fetch the existing carousel entry
    const data = await HomeCarouselModel.findFirst({
        select: selectionCriteria,
    });
    if (!data) {
        return NOT_FOUND('Home carousel entry not found.', request);
    }

    return OK(
        `${data?.images?.length} Home carousel images retrieved successfully.`,
        data?.images,
        request
    );
};

/**
 * GET is an asynchronous function used to handle HTTP GET requests specifically
 * for retrieving a list of gallery photos. It is wrapped with `asyncHandler`
 * to automatically handle exceptions and errors within the function.
 *
 * This function executes the provided `handleGetGalleryPhotoList` logic,
 * which typically involves querying a data source or performing actions necessary
 * to gather and return a list of photos for a gallery in an HTTP response.
 *
 * @type {Function}
 */
export const GET = asyncHandler(handleGetGalleryPhotoList);
