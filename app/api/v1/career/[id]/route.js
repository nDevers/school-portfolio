import {PrismaClient} from "@prisma/client";

import serviceShared from "@/shared/service.shared";

import asyncHandler from "@/util/asyncHandler";
import careerSelectionCriteria from "@/app/api/v1/career/career.selection.criteria";

/**
 * An instance of the PrismaClient used to interact with the database.
 *
 * The `prisma` variable provides access to database operations such as
 * querying, creating, updating, and deleting records in the connected
 * database. It acts as the main interface for interacting with the Prisma
 * ORM and issuing queries to the underlying database.
 *
 * Ensure that the appropriate Prisma schema is configured and that
 * the database connection is established correctly before performing
 * any operations using this client.
 *
 * This instance should typically be re-used across the application to
 * manage database operations efficiently. Be cautious about creating
 * multiple instances, as it may lead to connection pooling issues.
 */
const prisma = new PrismaClient();

/**
 * Represents the Career model from the Prisma schema.
 *
 * The Career model is used to interact with the data related to career entities
 * in the underlying database. It may include properties such as identifiers,
 * names, or descriptions, depending on the schema definition. Instances of
 * this model can be used for querying, creating, updating, and deleting records
 * related to careers.
 *
 * This model is automatically generated by Prisma and should be used in
 * conjunction with Prisma's database client to perform operations.
 *
 * Any changes to the underlying schema file that define the Career model
 * should be reflected by re-generating the Prisma client.
 */
const model = prisma.Career;

/**
 * Asynchronously handles the retrieval of a career entry by its identifier.
 *
 * @param {Object} request - The request object containing the necessary information to perform the operation.
 * @param {Object} context - The context object providing additional information needed for processing the request.
 * @returns {Promise<Object>} A promise that resolves to the career entry fetched by its identifier.
 *
 * This function leverages shared service functionality to fetch a career entry from the database
 * or an external system using predefined selection criteria. The retrieved entry corresponds
 * to the 'Career' model.
 */
export const handleGetCareerById = async (request, context) => {
    const selectionCriteria = careerSelectionCriteria();

    return serviceShared.fetchEntryById(request, context, model, selectionCriteria,  'Career');
};

/**
 * GET is an asynchronous function wrapped with an asyncHandler to process HTTP GET requests.
 * It invokes the handleGetCareerById method to retrieve career information based on a provided ID.
 * This function is part of a request handling logic for accessing specific career-related data.
 *
 * @type {Function}
 */
export const GET = asyncHandler(handleGetCareerById);
