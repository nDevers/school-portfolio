import {PrismaClient} from "@prisma/client";

import serviceShared from "@/shared/service.shared";
import aboutUsSchema from "@/app/api/v1/about-us/about.us.schema";

import asyncHandler from "@/util/asyncHandler";
import aboutUsSelectionCriteria from "@/app/api/v1/about-us/about.us.selection.criteria";

/**
 * An instance of the PrismaClient, used to interact with a database through Prisma.
 * Provides methods to perform CRUD operations, manage transactions, and execute raw SQL queries.
 * Designed to connect to and query the database schema defined in the corresponding Prisma schema file.
 *
 * This client manages a connection pool to the database, ensuring efficient and consistent data access.
 *
 * Note:
 * - Ensure the database connection configuration is properly set in the Prisma schema file.
 * - Close the PrismaClient instance when it's no longer needed to free up resources.
 */
const prisma = new PrismaClient();

/**
 * Represents the AboutUs model used by Prisma in the application.
 * The AboutUs model corresponds to the database structure and is utilized
 * for interacting with the 'About Us' related data within the system.
 *
 * This model is generated by Prisma and can be used to perform CRUD operations
 * and define queries in conjunction with Prisma's ORM methods.
 *
 * Note: The exact structure, fields, and relationships of the AboutUs model
 * are determined by the Prisma schema definition in your project.
 */
const model = prisma.AboutUs;

/**
 * Asynchronous function to handle the retrieval of the "About Us" career list.
 *
 * This function fetches a list of "About Us" entries in accordance with the
 * specified selection criteria. The entries are retrieved using a shared
 * service method which takes the request, context, data model, selection
 * criteria, a descriptive label, and a schema-specific query handler.
 *
 * @param {Object} request - The request object containing necessary data for fetching the career list.
 * @param {Object} context - The context in which the request is being executed.
 * @returns {Promise<Object>} A promise resolving to the fetched list of "About Us" entries.
 */
const handleGetCareerList = async (request, context) => {
    const selectionCriteria = aboutUsSelectionCriteria();

    return serviceShared.fetchEntryList(request, context, model, selectionCriteria, 'About us', aboutUsSchema.getDataByQuery);
};

/**
 * Asynchronous variable `GET` represents an HTTP GET handler
 * for handling career list retrieval requests.
 * This variable is wrapped with an `asyncHandler` to handle
 * errors in asynchronous operations, ensuring that exceptions
 * are properly caught and managed.
 *
 * The asynchronous function invoked by `GET` is intended to manage
 * the logic for retrieving and delivering a list of careers in
 * response to an HTTP GET request.
 */
export const GET = asyncHandler(handleGetCareerList);