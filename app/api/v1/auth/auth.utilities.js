'use strict';

import sharedResponseTypes from '@/shared/shared.response.types';

const { UNAUTHORIZED, OK } = sharedResponseTypes;

/**
 * A function that generates a response indicating an unauthorized access attempt.
 * It utilizes the `UNAUTHORIZED` function to create the response.
 *
 * @param {string} message - The message explaining the reason for unauthorized access.
 * @param {object} request - The request object associated with the unauthorized access attempt.
 * @returns {object} The response object generated by the `UNAUTHORIZED` function.
 */
const unauthorizedResponse = (message, request) => {
    return UNAUTHORIZED(message, request);
};

/**
 * Creates and returns a standardized successful response object.
 * This function is typically used to generate a response for an authorized
 * request or action.
 *
 * @param {string} message - A descriptive message providing context about the response.
 * @param {*} returnData - The data to be returned with the response, typically the result of the request or action.
 * @param {Object} request - The original request object, which may provide context or additional metadata for the response.
 * @returns {Object} A response object representing a successful execution, containing the provided message, return data, and additional details.
 */
const authorizedResponse = (message, returnData, request) => {
    return OK(message, returnData, request);
};

/**
 * A utility object that provides methods related to handling authorization responses.
 *
 * @property {Function} unauthorizedResponse - A function that handles actions or responses for unauthorized access.
 * @property {Function} authorizedResponse - A function that handles actions or responses for successful authorization.
 */
const authUtilities = {
    unauthorizedResponse,
    authorizedResponse,
};

export default authUtilities;
