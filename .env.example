####################################################
# .env.production Configuration File
####################################################
# This file serves as a template for configuring environment variables essential for the development environment.
# Adjust these settings to align with your specific development needs and infrastructure requirements.



####################################################
# APPLICATION ENVIRONMENT
# Purpose: Defines the operating mode of the application (development, test, production).
# Use: Toggle features or behaviors based on the application environment.
####################################################

# NODE_ENV: Specifies the environment in which the application runs.
# Typical values: development, test, production.
NODE_ENV='production'



####################################################
# SERVER CONFIGURATION
# Purpose: Contains settings pertinent to the application server, such as port and API version.
# Use: Facilitate running the server with environment-specific configurations.
####################################################



####################################################
# TIMEOUT CONFIGURATION
# Purpose: Defines the timeout settings for various operations in the application.
# Use: Configure timeout settings for operations that require a specific time limit.
####################################################

# TIMEOUT_IN_SECONDS: Specifies the default timeout value (in seconds) for application operations.
TIMEOUT_IN_SECONDS=60



####################################################
# JSON PAYLOAD CONFIGURATION
# Purpose: Defines settings for JSON payload limits and other related configurations.
# Use: Configure the maximum payload size for JSON requests and other related settings.
####################################################

# JSON_PAYLOAD_LIMIT_IN_KB: Defines the maximum allowed size (in KB) for JSON payloads in requests.
JSON_PAYLOAD_LIMIT_IN_KB=20



####################################################
# CORS CONFIGURATION
# Purpose: Defines settings for Cross-Origin Resource Sharing (CORS) in the application.
# Use: Configure CORS settings to allow or restrict access to the application from different domains.
####################################################

# CORS_ALLOWED_METHODS: Specifies the HTTP methods allowed for Cross-Origin Resource Sharing (CORS).
CORS_ALLOWED_METHODS='OPTIONS, POST, GET, PATCH, DELETE'

# CORS_ALLOWED_ORIGIN: Specifies the origins allowed for making CORS requests.
# Use a comma-separated list of allowed origins.
CORS_ALLOWED_ORIGIN='http://localhost:5000, http://localhost:3000'



####################################################
# DATABASE CONFIGURATION
# Purpose: Configuration settings for the application's database connection.
# Use: Establish and manage the connection to different database.
####################################################

# MONGODB_DATABASE_PROTOCOL: Protocol for connecting to the MongoDB database.
MONGODB_DATABASE_PROTOCOL='mongodb+srv'

# MONGODB_DATABASE_USERNAME: The username for authenticating with the MongoDB database.
MONGODB_DATABASE_USERNAME=

# MONGODB_DATABASE_PASSWORD: The password for authenticating with the MongoDB database.
MONGODB_DATABASE_PASSWORD=

# MONGODB_DATABASE_CLUSTER_HOST: The cluster host for the MongoDB database connection.
MONGODB_DATABASE_CLUSTER_HOST=

# MONGODB_DATABASE_DATABASE_NAME: The name of the MongoDB database.
MONGODB_DATABASE_DATABASE_NAME=

# MONGODB_DATABASE_OPTIONS: Additional options for the MongoDB connection string.
MONGODB_DATABASE_OPTIONS='retryWrites=true&w=majority&appName=Cluster0'

# DATABASE_URL: Connection string for the database. Used in frameworks like Prisma.
DATABASE_URL=



####################################################
# AUTH CONFIGURATION
# Purpose: Contains settings related to user authentication and authorization.
# Use: Configure settings for user roles, permissions, and other authentication-related features.
####################################################

# AUTH_X_SITE_IDENTIFIER: Unique identifier for site authentication.
# Example: Used to ensure cross-site authentication consistency.
AUTH_X_SITE_IDENTIFIER=

# AUTH_MAXIMUM_LOGIN_ATTEMPTS: Max login attempts before lockout.
AUTH_MAXIMUM_LOGIN_ATTEMPTS='5'

# AUTH_MAXIMUM_RESET_PASSWORD_ATTEMPTS: Max password reset attempts.
AUTH_MAXIMUM_RESET_PASSWORD_ATTEMPTS='5'

# AUTH_MAXIMUM_VERIFY_EMAIL_ATTEMPTS: Max email verification attempts.
AUTH_MAXIMUM_VERIFY_EMAIL_ATTEMPTS='5'

# AUTH_MAXIMUM_CHANGE_EMAIL_ATTEMPTS: Max email change attempts.
AUTH_MAXIMUM_CHANGE_EMAIL_ATTEMPTS='5'

# AUTH_MAXIMUM_CHANGE_MOBILE_ATTEMPTS: Max mobile number change attempts.
AUTH_MAXIMUM_CHANGE_MOBILE_ATTEMPTS='5'

# AUTH_MAXIMUM_CHANGE_PASSWORD_ATTEMPTS: Max password change attempts.
AUTH_MAXIMUM_CHANGE_PASSWORD_ATTEMPTS='5'

# AUTH_MAXIMUM_ACTIVE_SESSIONS: Maximum concurrent active sessions.
AUTH_MAXIMUM_ACTIVE_SESSIONS='3'

# AUTH_ACCOUNT_LOCK_DURATION_HOUR: Account lock duration after max attempts (in hours).
AUTH_ACCOUNT_LOCK_DURATION_HOUR='1'



####################################################
# JWT CONFIGURATION
# Purpose: Settings related to JSON Web Tokens for secure authentication and authorization.
# Use: Configure secret keys and token expiration times for various authentication flows.
####################################################

# JWT_ACCESS_TOKEN_SECRET: Secret key for access token encryption.
JWT_ACCESS_TOKEN_SECRET='exampleSecretKey'

# JWT_ACCESS_TOKEN_EXPIRATION_IN_MINUTES: Access token validity period.
JWT_ACCESS_TOKEN_EXPIRATION_IN_MINUTES='40'

# JWT_REFRESH_TOKEN_SECRET: Secret key for refresh token encryption.
JWT_REFRESH_TOKEN_SECRET='exampleRefreshKey'

# JWT_REFRESH_TOKEN_EXPIRATION_IN_MINUTES: Refresh token validity period.
JWT_REFRESH_TOKEN_EXPIRATION_IN_MINUTES='10'

# JWT_RESET_PASSWORD_TOKEN_SECRET: Secret key for reset password tokens.
JWT_RESET_PASSWORD_TOKEN_SECRET='exampleResetPasswordKey'

# JWT_RESET_PASSWORD_TOKEN_EXPIRATION_IN_MINUTES: Reset password token expiration time.
JWT_RESET_PASSWORD_TOKEN_EXPIRATION_IN_MINUTES='10'

# JWT_VERIFY_EMAIL_TOKEN_SECRET: Secret key for email verification tokens.
JWT_VERIFY_EMAIL_TOKEN_SECRET='exampleVerifyEmailKey'

# JWT_VERIFY_EMAIL_TOKEN_EXPIRATION_IN_MINUTES: Email verification token expiration time.
JWT_VERIFY_EMAIL_TOKEN_EXPIRATION_IN_MINUTES='10'



####################################################
# RATE LIMIT CONFIGURATION
# Purpose: Contains settings related to rate limiting for API endpoints.
# Use: Configure rate limits to prevent abuse or excessive usage of API endpoints.
####################################################

# RATE_LIMIT_TOTAL_REQUESTS: Maximum number of requests allowed in the time window.
RATE_LIMIT_TOTAL_REQUESTS='100'

# RATE_LIMIT_WINDOW_IN_MS: Time window duration in milliseconds for rate limiting.
RATE_LIMIT_WINDOW_IN_MS='15 * 60 * 1000'

# RATE_LIMIT_MESSAGE: Message displayed when the rate limit is exceeded.
RATE_LIMIT_MESSAGE='Too many requests, please try again later.'

# RATE_LIMIT_HEADERS: Whether to include rate limit headers in the response.
RATE_LIMIT_HEADERS='true'



####################################################
# COOKIES CONFIGURATION
# Purpose: Contains settings related to cookies used for session management.
# Use: Configure cookie settings for secure session management and user authentication.
####################################################

# COOKIE_SECURE: Enforces secure cookies (HTTPS only).
COOKIE_SECURE='true'

# COOKIE_SAME_SITE: Restricts cookies to same-site or cross-site scenarios.
COOKIE_SAME_SITE='true'

# COOKIE_HTTP_ONLY: Ensures cookies are not accessible via JavaScript.
COOKIE_HTTP_ONLY='true'

# COOKIE_MAX_AGE_IN_SECONDS: Maximum age (in seconds) for cookies.
COOKIE_MAX_AGE_IN_SECONDS='86400'

# COOKIE_USER_TOKEN_NAME: Name of the cookie storing the user token.
COOKIE_USER_TOKEN_NAME='user-token'



####################################################
# CACHE CONFIGURATION
# Purpose: Defines settings for caching mechanisms used in the application.
# Use: Configure caching settings for various cache stores (e.g., Redis, Memcached).
####################################################

# CACHE_TTL_IN_SECONDS: Time-to-live (TTL) for cached data in seconds.
CACHE_TTL_IN_SECONDS='864000'



####################################################
# EMAIL SERVICE CONFIGURATION
# Purpose: Defines settings for SMTP-based email service used for sending emails from the application.
# Use: Configure connection and authentication details for the email service provider.
####################################################

# EMAIL_SMTP_HOST: SMTP host for sending emails.
EMAIL_SMTP_HOST='smtp.gmail.com'

# EMAIL_SMTP_PORT: SMTP port number.
EMAIL_SMTP_PORT='587'

# EMAIL_SMTP_USERNAME: Username for authenticating with the email service.
EMAIL_SMTP_USERNAME=

# EMAIL_SMTP_PASSWORD: Password for authenticating with the email service.
EMAIL_SMTP_PASSWORD=

# EMAIL_SMTP_MAX_CONNECTION_RETRY_ATTEMPTS: Maximum retry attempts for SMTP connections.
EMAIL_SMTP_MAX_CONNECTION_RETRY_ATTEMPTS='10'

# EMAIL_FROM: Default sender email address for outgoing emails.
EMAIL_FROM=



####################################################
# GOOGLE DRIVE SERVICE CONFIGURATION
# Purpose: Optional settings for integrating Google Drive as a file storage solution.
# Use: Specify authentication and folder details for storing files on Google Drive.
####################################################

# GOOGLE_DRIVE_CLIENT_EMAIL: Client email for Google Drive API authentication.
GOOGLE_DRIVE_CLIENT_EMAIL='google-drive-client-email'

# GOOGLE_DRIVE_FOLDER_KEY: Folder key for storing files in Google Drive.
GOOGLE_DRIVE_FOLDER_KEY='google-drive-folder-key'

# GOOGLE_DRIVE_PRIVATE_KEY: Base64-encoded private key for Google Drive API authentication.
GOOGLE_DRIVE_PRIVATE_KEY='google-drive-private-key-in-base64'

# GOOGLE_DRIVE_SCOPE: OAuth scope for accessing Google Drive.
GOOGLE_DRIVE_SCOPE='https://www.googleapis.com/auth/drive'



####################################################
# SYSTEM ADMIN CONFIGURATION
# Purpose: Contains settings for the default admin user of the application.
# Use: Configure the default admin user's email and password for initial setup.
####################################################

# SYSTEM_ADMIN_EMAIL: Default email for the system admin account.
SYSTEM_ADMIN_EMAIL='admin@yourapp.com'

# SYSTEM_ADMIN_PASSWORD: Default password for the system admin account.
SYSTEM_ADMIN_PASSWORD='adminSecretPassword'



####################################################
# CONTACT INFORMATION
# Purpose: Defines contact information for the application.
# Use: Provide contact details for users to reach out for support or inquiries.
####################################################

# CONTACT_EMAIL: General contact email for inquiries.
CONTACT_EMAIL='montasimmamun@gmail.com'

# CONTACT_MOBILE: General contact phone number.
CONTACT_MOBILE='+8801722815469'

# SUPPORT_EMAIL: Email address for support requests.
SUPPORT_EMAIL='montasimmamun@gmail.com'

# SUPPORT_MOBILE: Phone number for support requests.
SUPPORT_MOBILE='+8801722815469'

# ADMIN_EMAIL: Email address for administrative contacts.
ADMIN_EMAIL='montasimmamun@gmail.com'

# ADMIN_MOBILE: Phone number for administrative contacts.
ADMIN_MOBILE='+8801722815469'



####################################################
# SOCIAL MEDIA LINKS
# Purpose: Defines social media links for the application.
# Use: Provide links to social media profiles for users to connect with the application.
####################################################

# SOCIAL_MEDIA_LINKEDIN: LinkedIn profile link.
SOCIAL_MEDIA_LINKEDIN='https://www.linkedin.com/in/montasim'

# SOCIAL_MEDIA_GITHUB: GitHub profile link.
SOCIAL_MEDIA_GITHUB='https://github.com/montasim'

# SOCIAL_MEDIA_X: X (formerly Twitter) profile link.
SOCIAL_MEDIA_X='https://github.com/montasim'

# SOCIAL_MEDIA_FACEBOOK: Facebook profile link.
SOCIAL_MEDIA_FACEBOOK='https://github.com/montasim'

# SOCIAL_MEDIA_INSTAGRAM: Instagram profile link.
SOCIAL_MEDIA_INSTAGRAM='https://github.com/montasim'



####################################################
# SENTRY CONFIGURATION
# Purpose: Define Sentry credentials for error tracking and monitoring.
# Use: Monitor application errors and performance in production.
####################################################

# SENTRY_DSN: Data Source Name for the Sentry project.
SENTRY_DSN=

# SENTRY_AUTH_TOKEN: Authentication token for accessing the Sentry API.
SENTRY_AUTH_TOKEN=



####################################################
# DEBUG CONFIGURATION
# Purpose: Define settings related to debug mode in the application.
# Use: Enable detailed debugging features during development or troubleshooting.
####################################################

# DEBUG_MODE: Enables or disables debug mode.
# true - Debug mode is enabled.
# false - Debug mode is disabled.
DEBUG_MODE=true

# DEBUG_LOG_LEVEL: Specifies the level of detail in debug logs.
# Options: 'INFO', 'DEBUG', 'WARN', 'ERROR'
DEBUG_LOG_LEVEL='DEBUG'

# DEBUG_ALLOWED_USER_AGENT: Specifies user agents allowed for debug mode.
# Example: 'PostmanRuntime/' allows debugging for requests from Postman.
DEBUG_ALLOWED_USER_AGENT='PostmanRuntime/'

# DEBUG_KEY: Encryption key used for debug purposes.
# Example: Used to decrypt sensitive data for debugging.
# Ensure this key is stored securely and rotated periodically.
DEBUG_KEY=



####################################################
# CRYPTOGRAPHY CONFIGURATION
# Purpose: Define secrets for cryptographic operations within the application.
# Use: Ensure secure data encryption, decryption, and hashing processes.
####################################################

# NEXT_PUBLIC_CRYPTO_SECRET_KEY: Secret key for cryptographic operations.
NEXT_PUBLIC_CRYPTO_SECRET_KEY=

# NEXT_PUBLIC_BASE_URL: Base URL for the application.
NEXT_PUBLIC_BASE_URL='http://localhost:3000'

# NEXT_PUBLIC_VERSION: API version to be used in requests.
NEXT_PUBLIC_VERSION='v1'

# NEXT_PUBLIC_UNSPLASH_ACCESS_KEY: Access key for Unsplash API integration.
NEXT_PUBLIC_UNSPLASH_ACCESS_KEY='v1'
