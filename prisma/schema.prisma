generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  id                           String   @id @default(auto()) @map("_id") @db.ObjectId
  name                         String
  dateOfBirth                  String
  email                        String   @unique
  password                     String
  emailVerifyToken             String?
  resetPasswordToken           String?
  resetPasswordTokenExpiration DateTime?
  createdAt                    DateTime @default(now())
  updatedAt                    DateTime @updatedAt

  @@map("admins")
}

model Faq {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  question  String   @unique
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SchoolAchievement {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       Int
  description String
  iconId      String   @unique
  icon        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SchoolInfo {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String   @unique
  description String
  iconId      String   @unique
  icon        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Career {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String   @unique
  subTitle    String
  description String
  files       Json     // JSON field to store an object with fileId and file properties
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model AboutUs {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String   @unique
  description String
  files       Json     // JSON field to store an object with fileId and file properties
  images      Json     // JSON field to store an object with imageId and image properties
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Blog {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String   @unique
  description String
  bannerId    String   @unique
  banner      Json     // JSON field to store an object with bannerId and banner properties
  files       Json     // JSON field to store an object with fileId and file properties
  images      Json     // JSON field to store an object with imageId and image properties
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Academic {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  category    String
  title       String   @unique
  description String
  fileId      String   @unique
  file        String
  publishDate DateTime
  badge       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Faculty {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  category    String
  name        String
  designation String
  imageId     String   @unique
  image       String
  email       String   @unique
  mobile      String   @unique
  portfolio   String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
