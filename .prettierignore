####################################################
# .prettierignore Configuration File
####################################################
# Purpose:
# The .prettierignore file is used to specify which files and directories
# should be ignored by Prettier, the code formatting tool. Ignoring these files
# ensures that Prettier does not format files that are automatically generated,
# or where formatting is otherwise unnecessary or undesirable, maintaining a clean
# and consistent code style where it matters most.

####################################################
# IDE AND CODE EDITOR SETTINGS
####################################################
# Purpose:
# Configuration files generated by IDEs and editors are often user-specific
# and should not be formatted. This prevents formatting conflicts and maintains
# individual workspace settings.

# JetBrains IDEA/Android Studio project settings.
.idea/

# Visual Studio Code workspace settings.
.vscode/

# macOS-specific file created by Finder for file metadata.
.DS_Store

####################################################
# DEPENDENCY DIRECTORIES
####################################################
# Purpose:
# Directories like `node_modules` or `.yarn/` contain installed dependencies
# which should not be formatted. These directories are regenerated by package
# managers and are not manually maintained.

# Installed Node.js project dependencies.
/node_modules

# Yarn lockfile, cache, and plugin data.
.yarn/

# Plug'n'Play manifest and JavaScript file.
.pnp
.pnp.js

# Cached install state for Yarn berry.
.yarn/install-state.gz

####################################################
# BUILD OUTPUTS
####################################################
# Purpose:
# Build artifacts and compiled code are generated automatically during
# development or production builds and should not be formatted.

# General output folder for build artifacts.
/build

# Next.js build directory.
.next/

# Generic folder for production deployments.
.out/

####################################################
# LOG FILES
####################################################
# Purpose:
# Log files contain runtime and error information and are not relevant
# for code formatting.

# Generic directory for logs and specific log files.
logs/
*.log
logs*.json
docker.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

####################################################
# ENVIRONMENT VARIABLE CONFIGURATIONS
####################################################
# Purpose:
# Environment configuration files contain sensitive data and specific
# settings that should not be altered by formatting tools.

# All environment variable files.
.env
.env.development
.env.test
.env.staging
.env.uat
.env.production
.env*.local

####################################################
# DOCUMENTATION
####################################################
# Purpose:
# Documentation often follows a specified format that should not be altered
# by formatting tools to ensure their structured content remains intact.

# General documentation directory and specific documentation files.
/documentation/
LICENSE
SECURITY.md
src/modules/api/documentation/

####################################################
# VERCEL CONFIGURATION
####################################################
# Purpose:
# Vercel deployment configuration should not be altered by formatting tools
# as it is specific to deployment environments.

# Vercel configuration files.
.vercel

####################################################
# DEPENDENCY LOCK FILES
####################################################
# Purpose:
# Dependency lock files like `yarn.lock` ensure consistent installations and
# should not be reformatted.

# Yarn lock file.
yarn.lock

####################################################
# MISCELLANEOUS
####################################################
# Purpose:
# Miscellaneous files that do not fit other categories but are typically
# unnecessary for formatting.

# TypeScript build information and Next.js types.
*.tsbuildinfo
next-env.d.ts

# Private keys and sensitive files.
*.pem

####################################################
# CONFIGURATION FILES
####################################################
# Purpose:
# Configuration files for tools and applications dictate the behavior
# and setup and should remain unaltered by formatting tools.

# Babel configuration and Yarn directory.
.babelrc
.yarn/

####################################################
# NEXT.JS BUILD OUTPUT
####################################################
# Purpose:
# Build output directories for Next.js contain generated code that is
# recreated with each build and should not be formatted.

# Next.js build output directory.
.next/

####################################################
# LOCAL FILE UPLOADS
####################################################
# Purpose:
# Files uploaded by users during development are stored temporarily and
# should not be formatted to avoid conflicts or unauthorized access.

# Temporary storage for user-uploaded files.
/public/assets
